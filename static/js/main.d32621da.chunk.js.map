{"version":3,"sources":["components/ToDoItem.js","ToDo.js","index.js"],"names":["ToDoItem","react_default","a","createElement","className","this","props","item","onClick","deleteItem","Component","ToDo","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInput","e","setState","todo","target","value","handleKeyPress","key","createNewToDoItem","state","_ref","list","concat","toConsumableArray","console","log","indexToDelete","_ref2","filter","toDo","index","_this2","map","src_components_ToDoItem","bind","type","placeholder","onChange","onKeyPress","ReactDOM","render","src_ToDo_0","document","getElementById"],"mappings":"qPAgBeA,gMAXT,OACGC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBC,KAAKC,MAAMC,MACzCN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBI,QAASH,KAAKC,MAAMG,YAAxD,aALWC,cC0FRC,cAtFb,SAAAA,EAAYL,GAAO,IAAAM,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAR,KAAAM,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAR,KAAAQ,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAZ,KAAMC,KASRY,YAAc,SAAAC,GACZP,EAAKQ,SAAS,CACZC,KAAMF,EAAEG,OAAOC,SAZAX,EAkBnBY,eAAiB,SAAAL,GACQ,KAAnBA,EAAEG,OAAOC,OACG,UAAVJ,EAAEM,KACJb,EAAKc,qBArBQd,EA6BnBc,kBAAoB,SAAAP,GAIL,KAHIP,EAAKe,MAAdN,KAQRT,EAAKQ,SAAS,SAAAQ,GAAA,IAAGC,EAAHD,EAAGC,KAAMR,EAATO,EAASP,KAAT,MAAqB,CACjCQ,KAAI,GAAAC,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAMgB,GAAN,CAAY,CAAER,UAClBA,KAAM,MANNW,QAAQC,IAAI,WAlCGrB,EA+CnBH,WAAa,SAAAyB,GACXtB,EAAKQ,SAAS,SAAAe,GAAA,MAAe,CAC3BN,KADYM,EAAGN,KACJO,OAAO,SAACC,EAAMC,GAAP,OAAiBA,IAAUJ,QA/C/CtB,EAAKe,MAAQ,CACXE,KAAM,CAAC,CAAER,KAAM,mBAAqB,CAAEA,KAAM,cAC5CA,KAAM,IAJST,sEAqDZO,GAAG,IAAAoB,EAAAlC,KACR,OACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZC,KAAKsB,MAAME,KAAKW,IAAI,SAACjC,EAAMkB,GAC1B,OACExB,EAAAC,EAAAC,cAACsC,EAAD,CACEhB,IAAKA,EACLlB,KAAMA,EAAKc,KACXZ,WAAY8B,EAAK9B,WAAWiC,KAAKH,EAAMd,SAMjDxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SACEwC,KAAK,OACLpB,MAAOlB,KAAKsB,MAAMN,KAClBuB,YAAY,cACZC,SAAUxC,KAAKa,YACf4B,WAAYzC,KAAKmB,iBAEnBvB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaI,QAASH,KAAKqB,mBAA7C,cA9EShB,aCDnBqC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAAUC,SAASC,eAAe","file":"static/js/main.d32621da.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ToDoItem.css';\n\nclass ToDoItem extends Component {\n   render() {\n      return (\n         <div className=\"tasks\">\n            <p className=\"ToDoItem-Text\">{this.props.item}</p>\n            <button className=\"ToDoItem-Delete\" onClick={this.props.deleteItem}>\n               -\n            </button>\n         </div>\n      );\n   }\n}\n\nexport default ToDoItem;\n","//https://medium.com/javascript-in-plain-english/i-created-the-exact-same-app-in-react-and-vue-here-are-the-differences-e9a1ae8077fd\n\nimport React, { Component } from 'react';\nimport './ToDo.css';\nimport ToDoItem from './components/ToDoItem';\n\nclass ToDo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [{ todo: 'clean the house' }, { todo: 'pay bills' }],\n      todo: ''\n    };\n  }\n\n  // watches the value entered into the input\n  // updates the state of todo\n  handleInput = e => {\n    this.setState({\n      todo: e.target.value\n    });\n  };\n\n  // ensures that a blank item cannot be added\n  // triggers the createNewToDoItem function\n  handleKeyPress = e => {\n    if (e.target.value !== '') {\n      if (e.key === 'Enter') {\n        this.createNewToDoItem();\n      }\n    }\n  };\n\n  // takes the entire list from state (using a spread operator)\n  // and adds the value entered into the input on the end of the list\n  // todo is set back to an emply string to update the value inside input\n  createNewToDoItem = e => {\n    const { todo } = this.state;\n\n    //check for errors\n    if (todo === '') {\n      console.log('oopsie');\n      return;\n    }\n\n    this.setState(({ list, todo }) => ({\n      list: [...list, { todo }],\n      todo: ''\n    }));\n  };\n\n  // this is now being emitted back to the parent from the child component\n  // create a filtered list which does not include the item that triggered\n  // the deleteItem function\n  deleteItem = indexToDelete => {\n    this.setState(({ list }) => ({\n      list: list.filter((toDo, index) => index !== indexToDelete)\n    }));\n  };\n\n  render(e) {\n    return (\n      <div className=\"todo-wrapper\">\n        <div className=\"ToDo-Container\">\n          <div className=\"ToDo-Content\">\n            {this.state.list.map((item, key) => {\n              return (\n                <ToDoItem\n                  key={key}\n                  item={item.todo}\n                  deleteItem={this.deleteItem.bind(this, key)}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"input-wrapper\">\n          <input\n            type=\"text\"\n            value={this.state.todo}\n            placeholder=\"Your task..\"\n            onChange={this.handleInput}\n            onKeyPress={this.handleKeyPress}\n          />\n          <button className=\"add-button\" onClick={this.createNewToDoItem}>\n            +\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ToDo from './ToDo';\n\nReactDOM.render(<ToDo />, document.getElementById('root'));\n"],"sourceRoot":""}